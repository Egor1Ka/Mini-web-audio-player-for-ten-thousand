{"ast":null,"code":"export const validateFields = _ref => {\n  let {\n    email,\n    phone\n  } = _ref;\n  const errors = {\n    email: '',\n    phone: ''\n  };\n\n  if (email) {\n    const emailRegExp = new RegExp(/\\w+@\\w+\\.\\w+/);\n\n    if (!emailRegExp.test(email)) {\n      errors.email = 'Invalid user email';\n    }\n  }\n\n  if (phone) {\n    const phoneRegExp = new RegExp(/[0-9]{10,12}/);\n\n    if (!phoneRegExp.test(phone)) {\n      errors.phone = 'Invalid phone number';\n    }\n  }\n\n  return errors;\n};","map":{"version":3,"names":["validateFields","email","phone","errors","emailRegExp","RegExp","test","phoneRegExp"],"sources":["C:/Users/Егор/Desktop/player/src/helpers/formValidation.ts"],"sourcesContent":["export interface IFields {\n  email: string;\n  phone: string;\n  global: string;\n}\n\nexport const validateFields = ({email, phone}: Partial<IFields>) => {\n  const errors = {\n    email: '',\n    phone: '',\n  };\n\n  if (email) {\n    const emailRegExp = new RegExp(/\\w+@\\w+\\.\\w+/);\n    if (!emailRegExp.test(email)) {\n      errors.email = 'Invalid user email';\n    }\n  }\n\n  if (phone) {\n    const phoneRegExp = new RegExp(/[0-9]{10,12}/);\n    if (!phoneRegExp.test(phone)) {\n      errors.phone = 'Invalid phone number';\n    }\n  }\n\n  return errors;\n};\n"],"mappings":"AAMA,OAAO,MAAMA,cAAc,GAAG,QAAsC;EAAA,IAArC;IAACC,KAAD;IAAQC;EAAR,CAAqC;EAClE,MAAMC,MAAM,GAAG;IACbF,KAAK,EAAE,EADM;IAEbC,KAAK,EAAE;EAFM,CAAf;;EAKA,IAAID,KAAJ,EAAW;IACT,MAAMG,WAAW,GAAG,IAAIC,MAAJ,CAAW,cAAX,CAApB;;IACA,IAAI,CAACD,WAAW,CAACE,IAAZ,CAAiBL,KAAjB,CAAL,EAA8B;MAC5BE,MAAM,CAACF,KAAP,GAAe,oBAAf;IACD;EACF;;EAED,IAAIC,KAAJ,EAAW;IACT,MAAMK,WAAW,GAAG,IAAIF,MAAJ,CAAW,cAAX,CAApB;;IACA,IAAI,CAACE,WAAW,CAACD,IAAZ,CAAiBJ,KAAjB,CAAL,EAA8B;MAC5BC,MAAM,CAACD,KAAP,GAAe,sBAAf;IACD;EACF;;EAED,OAAOC,MAAP;AACD,CArBM"},"metadata":{},"sourceType":"module"}